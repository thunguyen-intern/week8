version: '3.7'

services:
  odoo:
    build:
      context: .
      dockerfile: odoo.Dockerfile
    restart: always
    volumes:
      - odoo_data:/opt/odoo/odoo/.local/share/Odoo
    links:
      - db:db
    depends_on:
      - db
    deploy:
      replicas: 2
    tty: true

  nginx:
    container_name: nginx
    image: nginx
    volumes:
      - ./nginx/:/etc/nginx/conf.d/
      - ./prometheus.htpasswd:/etc/nginx/prometheus.htpasswd
      - ./grafana.htpasswd:/etc/nginx/grafana.htpasswd
    ports:
      - 80:80
    expose:
      - 80
    depends_on:
      - odoo

  db:
    container_name: db
    image: postgres:13
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: odoo
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 5432
    volumes:
      - ./postgresql/:/docker-entrypoint-initdb.d/
    tty: true

  prometheus:
    image: prom/prometheus:v2.45.0
    volumes:
      # bind mount: prometheus dir
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    networks:
      - prom
    restart: always
    tty: true

  node-exporter:
    image: quay.io/prometheus/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command: 
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - prom
    restart: always
    deploy:
      mode: global
    tty: true
  
  alertmanager:
    image: quay.io/prometheus/alertmanager
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    ports:
      - 9093:9093
    networks:
      - prom
    restart: always
    tty: true

  grafana:
    image: grafana/grafana:10.0.3
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    environment:
      # - ./grafana/config.monitoring
      GF_SECURITY_ADMIN_USER: odoo
      GF_SECURITY_ADMIN_PASSWORD: odoo
    networks:
      - prom
    restart: always
    tty: true

volumes:
  prometheus_data: {}
  grafana_data: {}
  odoo_data:
  postgresql:

networks:
  prom: