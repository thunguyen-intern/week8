version: '3.7'

services:
  nginx:
    image: nginx
    container_name: nginx 
    tty: true
    volumes:
      - ./nginx:/etc/nginx/conf.d

  prometheus:
    image: prom/prometheus:v2.45.0
    volumes:
      # bind mount: prometheus dir
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--enable-feature=remote-write-receiver'
    ports:
      - 9090:9090
    networks:
      - prom
    restart: unless-stopped
    tty: true

  node-exporter:
    container_name: node-exporter
    image: quay.io/prometheus/node-exporter
    volumes:
      - /etc:/host/etc
      - /usr/lib:/host/usr/lib
      - /:/host:ro,rslave
    command: 
      - '--path.rootfs=/host'
      - '--no-collector.os'
    pid: host
    ports:
      - 9100:9100
    networks:
      - prom
    restart: unless-stopped
    deploy:
      mode: global
    tty: true
  
  alertmanager:
    image: quay.io/prometheus/alertmanager
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    ports:
      - 9093:9093
    networks:
      - prom
    restart: always
    tty: true

  grafana:
    image: grafana/grafana:10.0.3
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    environment:
      # - ./grafana/config.monitoring
      GF_SECURITY_ADMIN_USER: odoo
      GF_SECURITY_ADMIN_PASSWORD: odoo
    networks:
      - prom
    restart: unless-stopped
    tty: true

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  prom: